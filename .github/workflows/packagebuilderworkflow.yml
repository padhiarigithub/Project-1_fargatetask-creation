name: Build and Deploy Docker Image to Amazon ECR and Fargate

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'dev'
        required: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: issuepackagebuilder
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Git clone the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli

      - name: Install OIDC CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64
          curl -Lo aws-iam-authenticator.txt https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/authenticator_0.5.9_checksums.txt
          awk '/aws-iam-authenticator_0.5.9_linux_amd64/ {print $1}' aws-iam-authenticator.txt
          openssl sha1 -sha256 aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
          echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
          # sudo mv aws-iam-authenticator /usr/local/bin/

      - name: Authenticate with AWS
        run: |
          aws eks get-token --cluster-name my-cluster --region $AWS_REGION | aws-iam-authenticator token -i "arn:aws:iam::$AWS_ACCOUNT_ID:oidc-provider/oidc.eks.$AWS_REGION.amazonaws.com/id/$ENVIRONMENT" | jq -r '.status.token' | docker login -u AWS -p- $ECR_REGISTRY

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Create Fargate Task
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --task-definition task-definition.json
